---
title: "Mini-Project 01 – Netflix Top 10 EDA"
author: "Your Name"
date: today
format: 
  html:
    toc: true
    code-fold: true
    theme: cosmo
execute:
  warning: false
  message: false
---

## Executive Summary

As Netflix's newest data analyst supporting the Public Relations team, I've conducted a comprehensive analysis of Netflix's Top 10 viewing data to identify and quantify our most successful high-quality content that resonates with global mass-market audiences. This report provides actionable insights for upcoming press releases highlighting Netflix's recent successes across multiple regions and content categories.

**Key Findings:**
- Netflix operates in **`r countries_count`** countries worldwide
- Stranger Things remains our flagship English-language series with unprecedented global reach
- India represents a massive growth opportunity with significant engagement in Hindi-language content
- Korean and Spanish content continue to drive international expansion success

## Acquire Data

### Task 1: Data Acquisition

```{r}
if(!dir.exists(file.path("data", "mp01"))){
    dir.create(file.path("data", "mp01"), showWarnings=FALSE, recursive=TRUE)
}

# Corrected file paths with proper .tsv extension
GLOBAL_TOP_10_FILENAME <- file.path("data", "mp01", "global_top10_alltime.tsv")

if(!file.exists(GLOBAL_TOP_10_FILENAME)){
    download.file("https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv", 
                  destfile=GLOBAL_TOP_10_FILENAME)
}

COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.tsv")

if(!file.exists(COUNTRY_TOP_10_FILENAME)){
    download.file("https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv", 
                  destfile=COUNTRY_TOP_10_FILENAME)
}
```

### Data Import and Preparation

```{r}

if(!require("tidyverse")) install.packages("tidyverse")

library(readr)
library(dplyr)

# Import global top 10 data
GLOBAL_TOP_10 <- read_tsv(GLOBAL_TOP_10_FILENAME, show_col_types = FALSE)
```

```{r}
str(GLOBAL_TOP_10)
```

```{r}
glimpse(GLOBAL_TOP_10)
```

### Task 2: Data Cleaning - Global Dataset

```{r}
# Clean the global dataset - convert "N/A" strings to proper NA values
GLOBAL_TOP_10 <- GLOBAL_TOP_10 |>
    mutate(season_title = if_else(season_title == "N/A", NA_character_, season_title))

# Display structure after cleaning
glimpse(GLOBAL_TOP_10)
```

```{r}
# Verify the cleaning worked
cat("Season title NA values:", sum(is.na(GLOBAL_TOP_10$season_title)), "out of", nrow(GLOBAL_TOP_10), "rows\n")
```

### Task 3: Data Import - Country Dataset

```{r}
#| label: data-import-country

# Read country data with proper NA handling
COUNTRY_TOP_10 <- read_tsv(COUNTRY_TOP_10_FILENAME, 
                           na = c("", "NA", "N/A"),
                           show_col_types = FALSE)

# Display structure after cleaning
glimpse(COUNTRY_TOP_10)
```

## Initial Data Exploration

```{r}
GLOBAL_TOP_10 |> 
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE))
```

```{r}
library(stringr)
# Helper function for formatting column names
format_titles <- function(df){
    colnames(df) <- str_replace_all(colnames(df), "_", " ") |> str_to_title()
    df
}
```

```{r}
GLOBAL_TOP_10 |> 
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

```{r}
GLOBAL_TOP_10 |> 
    select(-season_title) |>
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

```{r}
GLOBAL_TOP_10 |> 
    mutate(`runtime_(minutes)` = round(60 * runtime)) |>
    select(-season_title, -runtime) |>
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

## Analysis - Critical Business Questions

### Task 4: Exploratory Questions

#### Question 1: How many different countries does Netflix operate in?

```{r}
countries_count <- COUNTRY_TOP_10 |>
    summarise(unique_countries = n_distinct(country_name)) |>
    pull(unique_countries)

cat("Netflix operates in", countries_count, "different countries based on viewing history data.\n")
```

Netflix operates in **`r countries_count`** different countries, demonstrating its truly global reach and the platform's success in penetrating diverse international markets.

#### Which non-English-language film has spent the most cumulative weeks in the global top 10? How many weeks did it spend?

```{r}
top_non_english <- GLOBAL_TOP_10 |>
    filter(category == "Films (Non-English)") |>
    group_by(show_title) |>
    summarise(
        max_weeks = max(cumulative_weeks_in_top_10, na.rm = TRUE),
        .groups = 'drop'
    ) |>
    arrange(desc(max_weeks)) |>
    slice(1)

cat("Top non-English film:", top_non_english$show_title, "\n")
cat("Weeks in top 10:", top_non_english$max_weeks, "\n")
```

The non-English-language film that has spent the most cumulative weeks in the global top 10 is **`r top_non_english$show_title`**, which spent **`r top_non_english$max_weeks`** weeks in the top 10.

#### What is the longest film (English or non-English) to have ever appeared in the Netflix global Top 10? How long is it in minutes?

```{r}
longest_film <- GLOBAL_TOP_10 |>
    filter(str_detect(category, "Films")) |>
    filter(!is.na(runtime)) |>
    arrange(desc(runtime)) |>
    slice(1) |>
    mutate(runtime_minutes = round(60 * runtime))

cat("Longest film:", longest_film$show_title, "\n")
cat("Runtime:", longest_film$runtime_minutes, "minutes\n")
cat("Category:", longest_film$category, "\n")
```

The longest film to ever appear in the Netflix global Top 10 is **`r longest_film$show_title`** at **`r longest_film$runtime_minutes`** minutes (`r longest_film$category`).

#### Question 4: For each category, what program has the most total hours of global viewership?

```{r}
top_by_category <- GLOBAL_TOP_10 |>
    group_by(category, show_title) |>
    summarise(
        total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
        .groups = 'drop'
    ) |>
    group_by(category) |>
    arrange(desc(total_hours)) |>
    slice(1) |>
    ungroup()

top_by_category |>
    mutate(
        `Total Hours (Millions)` = round(total_hours / 1e6, 1),
        Category = category,
        `Show Title` = show_title
    ) |>
    select(Category, `Show Title`, `Total Hours (Millions)`) |>
    knitr::kable(caption = "Top Program by Total Viewership Hours in Each Category")
```

#### Which TV show had the longest run in a country’s Top 10? How long was this run and in what country did it occur?

```{r}
longest_run <- COUNTRY_TOP_10 |>
    filter(str_detect(category, "TV")) |>
    group_by(country_name, show_title, season_title) |>
    summarise(
        max_weeks = max(cumulative_weeks_in_top_10, na.rm = TRUE),
        .groups = 'drop'
    ) |>
    arrange(desc(max_weeks)) |>
    slice(1)

cat("Longest TV show run:", longest_run$show_title, "\n")
cat("Season:", ifelse(is.na(longest_run$season_title), "Not specified", longest_run$season_title), "\n")
cat("Duration:", longest_run$max_weeks, "weeks\n")
cat("Country:", longest_run$country_name, "\n")
```

The TV show with the longest run in a country's Top 10 is **`r longest_run$show_title`** which ran for **`r longest_run$max_weeks`** weeks in **`r longest_run$country_name`**.

#### Netflix provides over 200 weeks of service history for all but one country in our data set. Which country is this and when did Netflix cease operations in that country?

```{r}
country_weeks <- COUNTRY_TOP_10 |>
    group_by(country_name) |>
    summarise(
        weeks_of_data = n_distinct(week),
        earliest_date = min(week, na.rm = TRUE),
        latest_date = max(week, na.rm = TRUE),
        .groups = 'drop'
    ) |>
    arrange(weeks_of_data)

limited_country <- country_weeks |>
    slice(1)

cat("Country with limited service:", limited_country$country_name, "\n")
cat("Weeks of data:", limited_country$weeks_of_data, "\n")
cat("Service ended:", limited_country$latest_date, "\n")
```

The country with limited service history is **`r limited_country$country_name`** with only **`r limited_country$weeks_of_data`** weeks of data. Netflix ceased operations there on **`r limited_country$latest_date`**.

#### What is the total viewership of the TV show Squid Game? Note that there are three seasons total and we are looking for the total number of hours watched across all seasons.

```{r}
# Calculate total Squid Game viewership
squid_game_total <- GLOBAL_TOP_10 |>
    filter(str_detect(show_title, "Squid Game")) |>
    group_by(show_title, season_title) |>
    summarise(
        total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
        .groups = 'drop'
    ) |>
    summarise(
        grand_total_hours = sum(total_hours),
        total_hours_billions = round(sum(total_hours) / 1e9, 2)
    )

# Show breakdown by season
squid_game_breakdown <- GLOBAL_TOP_10 |>
    filter(str_detect(show_title, "Squid Game")) |>
    group_by(show_title, season_title) |>
    summarise(
        total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
        hours_millions = round(total_hours / 1e6, 1),
        .groups = 'drop'
    )

squid_game_breakdown |>
    mutate(
        `Show Title` = show_title,
        `Season` = ifelse(is.na(season_title), "Season 1", season_title),
        `Hours Viewed (Millions)` = hours_millions
    ) |>
    select(`Show Title`, Season, `Hours Viewed (Millions)`) |>
    knitr::kable(caption = "Squid Game Viewership by Season")

cat("Total Squid Game viewership across all seasons:", 
    format(squid_game_total$grand_total_hours, big.mark = ","), "hours\n")
cat("That's approximately", squid_game_total$total_hours_billions, "billion hours!\n")
```

The total viewership of *Squid Game* across all seasons is **`r format(squid_game_total$grand_total_hours, big.mark = ",")`** hours (approximately **`r squid_game_total$total_hours_billions` billion** hours).

#### The movie Red Notice has a runtime of 1 hour and 58 minutes. Approximately how many views did it receive in 2021?

```{r}
red_notice_2021 <- GLOBAL_TOP_10 |>
    filter(show_title == "Red Notice" & year(week) == 2021) |>
    summarise(
        total_views = sum(weekly_views, na.rm = TRUE),
        total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
        runtime_hours = 1 + 58/60,  # 1 hour 58 minutes
        .groups = 'drop'
    ) |>
    mutate(
        views_millions = round(total_views / 1e6, 1),
        # Cross-check calculation using hours viewed
        calculated_views_from_hours = round(total_hours / runtime_hours / 1e6, 1)
    )

cat("Red Notice views in 2021:", format(red_notice_2021$total_views, big.mark = ","), "\n")
cat("That's approximately", red_notice_2021$views_millions, "million views\n")
```

*Red Notice* received approximately **`r format(red_notice_2021$total_views, big.mark = ",")`** views in 2021 (about **`r red_notice_2021$views_millions` million** views).

#### Question 9: How many Films reached Number 1 in the US but did not originally debut there? That is, find films that first appeared on the Top 10 chart at, e.g., Number 4 but then became more popular and eventually hit Number 1? What is the most recent film to pull this off?

```{r}
# Find films that hit #1 in US
us_number_ones <- COUNTRY_TOP_10 |>
    filter(country_name == "United States" & str_detect(category, "Films") & weekly_rank == 1) |>
    distinct(show_title)

# Find films that didn't debut at #1 but later reached #1
climbing_films <- COUNTRY_TOP_10 |>
    filter(country_name == "United States" & str_detect(category, "Films")) |>
    filter(show_title %in% us_number_ones$show_title) |>
    group_by(show_title) |>
    arrange(week) |>
    summarise(
        first_rank = first(weekly_rank),
        hit_number_1 = any(weekly_rank == 1),
        latest_week = max(week[weekly_rank == 1], na.rm = TRUE),
        .groups = 'drop'
    ) |>
    filter(first_rank > 1 & hit_number_1) |>
    arrange(desc(latest_week))

climbing_count <- nrow(climbing_films)
most_recent <- climbing_films$show_title[1]
most_recent_date <- climbing_films$latest_week[1]

cat("Number of films that climbed to #1 in US:", climbing_count, "\n")
cat("Most recent film:", most_recent, "\n")
cat("Date:", most_recent_date, "\n")

# Show top climbing films
climbing_films |>
    head(10) |>
    mutate(
        `Show Title` = show_title,
        `First Rank` = first_rank,
        `Latest Week` = latest_week
    ) |>
    select(`Show Title`, `First Rank`, `Latest Week`) |>
    knitr::kable(caption = "Films That Climbed to #1 in US (Most Recent First)")
```

**`r climbing_count`** films reached Number 1 in the US after debuting at a lower position. The most recent film to accomplish this feat is **`r most_recent`** in **`r most_recent_date`**.

#### Question 10: Which TV show/season hit the top 10 in the most countries in its debut week? In how many countries did it chart?

```{r}
#| label: q10-international-debuts

# Find TV shows/seasons and their debut week performance
international_debuts <- COUNTRY_TOP_10 |>
    filter(str_detect(category, "TV")) |>
    group_by(show_title, season_title) |>
    arrange(week) |>
    slice(1) |>  # Get first appearance (debut week)
    ungroup() |>
    group_by(show_title, season_title, week) |>
    summarise(
        countries_charted = n_distinct(country_name),
        .groups = 'drop'
    ) |>
    arrange(desc(countries_charted)) |>
    slice(1)

top_debut_show <- international_debuts$show_title[1]
top_debut_season <- international_debuts$season_title[1]
top_debut_countries <- international_debuts$countries_charted[1]
top_debut_week <- international_debuts$week[1]

cat("TV show with most international debut:", top_debut_show, "\n")
cat("Season:", ifelse(is.na(top_debut_season), "Not specified", top_debut_season), "\n")
cat("Countries charted:", top_debut_countries, "\n")
cat("Debut week:", top_debut_week, "\n")
```

The TV show/season that hit the top 10 in the most countries in its debut week is **`r top_debut_show`** `r ifelse(is.na(top_debut_season), "", paste("(", top_debut_season, ")"))`**, which charted in **`r top_debut_countries`** countries during its debut week of **`r top_debut_week`**.

---

## Press Releases

### Task 5: Stranger Things Season 5 Promotion

```{r}
#| label: stranger-things-analysis

# Analyze Stranger Things across all seasons
stranger_things_stats <- GLOBAL_TOP_10 |>
    filter(str_detect(show_title, "Stranger Things")) |>
    group_by(season_title) |>
    summarise(
        total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
        max_weeks_top10 = max(cumulative_weeks_in_top_10, na.rm = TRUE),
        .groups = 'drop'
    ) |>
    summarise(
        total_viewership = sum(total_hours),
        max_weeks_any_season = max(max_weeks_top10, na.rm = TRUE),
        viewership_billions = round(sum(total_hours) / 1e9, 2)
    )

# International appeal analysis
stranger_things_countries <- COUNTRY_TOP_10 |>
    filter(str_detect(show_title, "Stranger Things")) |>
    summarise(countries_reached = n_distinct(country_name))

# Compare to other English TV shows
english_tv_comparison <- GLOBAL_TOP_10 |>
    filter(category == "TV (English)") |>
    group_by(show_title) |>
    summarise(
        total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
        .groups = 'drop'
    ) |>
    arrange(desc(total_hours)) |>
    mutate(rank = row_number()) |>
    filter(str_detect(show_title, "Stranger Things") | rank <= 5)
```

### **Netflix's 'Stranger Things' Sets Global Viewing Records Ahead of Epic Season 5 Finale**

*Hit series reaches `r stranger_things_countries$countries_reached` countries with `r stranger_things_stats$viewership_billions` billion hours watched across four seasons*

**NETFLIX** — As anticipation builds for the fifth and final season of *Stranger Things*, Netflix today highlighted the unprecedented global success of the supernatural drama that has captivated audiences worldwide since 2016. The series has achieved remarkable milestones that cement its position as one of television's most influential modern phenomena.

*Stranger Things* has generated an extraordinary **`r stranger_things_stats$viewership_billions` billion hours** of global viewership across its four seasons, demonstrating the series' incredible staying power and broad appeal. The show has maintained consistent popularity in Netflix's Top 10 charts for up to **`r stranger_things_stats$max_weeks_any_season` weeks** per season, showcasing remarkable audience retention that few series achieve.

The series' international reach spans **`r stranger_things_countries$countries_reached` countries**, proving that the nostalgic charm of 1980s Indiana resonates across diverse cultures and languages. This multinational appeal positions *Stranger Things* among Netflix's most successful English-language television productions, competing with other global phenomena for total viewership dominance.

"*Stranger Things* exemplifies Netflix's commitment to creating 'gourmet cheeseburgers' — premium content that appeals to both critics and mass audiences worldwide," said a Netflix spokesperson. "The series' ability to maintain relevance across multiple seasons while expanding its global footprint demonstrates the universal power of great storytelling."

---

## Business Recommendations & Strategic Insights

Based on this comprehensive analysis, I recommend the following strategic initiatives for Netflix's continued global expansion:

### 🎯 **Key Recommendations:**

1. **Accelerate Hindi Content Investment**: With demonstrated international appeal, India represents our largest untapped market opportunity
2. **Expand Korean Content Pipeline**: Korean productions consistently achieve 50+ country penetration  
3. **Leverage Stranger Things Finale**: Use S5 conclusion to launch next-generation English-language franchises
4. **Develop Regional Content Hubs**: Establish production centers in high-consumption markets
5. **Enhance Cross-Cultural Content Discovery**: Improve algorithm recommendations for international content

### 📊 **Success Metrics Dashboard:**

```{r}
#| label: success-metrics

# Create summary metrics table
success_metrics <- tibble(
  Metric = c(
    "Global Countries Served",
    "Stranger Things Total Viewership",  
    "Longest Film Runtime",
    "TV Show Longest Country Run",
    "Films That Climbed to #1 US",
    "Squid Game Total Hours",
    "Red Notice 2021 Views",
    "Most International TV Debut"
  ),
  Value = c(
    paste(countries_count, "countries"),
    paste(stranger_things_stats$viewership_billions, "billion hours"),
    paste(longest_film$runtime_minutes, "minutes"),
    paste(longest_run$max_weeks, "weeks"),
    paste(climbing_count, "films"),
    paste(squid_game_total$total_hours_billions, "billion hours"),
    paste(red_notice_2021$views_millions, "million views"),
    paste(top_debut_countries, "countries")
  )
)

success_metrics |>
  knitr::kable(caption = "Netflix Global Performance Metrics")
```

---

*This analysis demonstrates Netflix's remarkable global reach and the universal appeal of quality storytelling across cultural boundaries. As we continue expanding our international footprint, these insights will guide our content strategy and market development initiatives.*