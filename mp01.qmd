---
title: "Mini-Project 01 â€“ Netflix Top 10 EDA"
author: "Matthew Rivera"
date: "`r Sys.Date()`"
format:
  html:
    theme: default
    css: netflix-theme.scss
editor: visual
execute:
  echo: false
---

```{css}
/* ===============================
   NETFLIX PREMIUM THEME - ENHANCED
   =============================== */

@import url('https://fonts.googleapis.com/css2?family=Netflix+Sans:wght@300;400;500;700;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300;400;500;700&display=swap');

/* Root variables for consistency */
:root {
  --netflix-red: #E50914;
  --netflix-black: #141414;
  --netflix-dark-gray: #221f1f;
  --netflix-medium-gray: #2d2d2d;
  --netflix-light-gray: #f5f5f1;
  --netflix-accent: #564d4d;
  --netflix-gold: #ffd700;
  --gradient-red: linear-gradient(135deg, #E50914, #b20710);
  --gradient-dark: linear-gradient(135deg, #141414, #221f1f);
  --shadow-glow: 0 0 20px rgba(229, 9, 20, 0.3);
}

/* Base styling */
* {
  box-sizing: border-box;
}

html {
  scroll-behavior: smooth;
}

body {
  background: var(--netflix-black);
  background-image: 
    radial-gradient(circle at 20% 80%, rgba(229, 9, 20, 0.08) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(229, 9, 20, 0.05) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(255, 255, 255, 0.02) 0%, transparent 50%);
  color: var(--netflix-light-gray);
  font-family: 'Netflix Sans', -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
  line-height: 1.6;
  margin: 0;
  padding: 0;
}

/* Container styling */
.container-fluid, #quarto-content {
  max-width: 1400px;
  margin: 0 auto;
  padding: 2rem;
}

/* Header styling with enhanced Netflix branding */
#title-block-header {
  text-align: center;
  padding: 4rem 2rem;
  background: var(--gradient-dark);
  border-radius: 20px;
  margin: 2rem 0 4rem 0;
  position: relative;
  overflow: hidden;
}

#title-block-header::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 6px;
  background: var(--gradient-red);
}

.title {
  background: var(--gradient-red);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  font-size: clamp(2.5rem, 5vw, 4rem);
  font-weight: 900;
  text-align: center;
  margin: 0 0 1rem 0;
  line-height: 1.1;
  text-shadow: var(--shadow-glow);
}

.subtitle {
  color: var(--netflix-light-gray);
  font-size: 1.5rem;
  font-weight: 400;
  margin-bottom: 1rem;
  opacity: 0.9;
}

.description {
  color: var(--netflix-light-gray);
  font-size: 1.1rem;
  max-width: 800px;
  margin: 0 auto;
  opacity: 0.8;
}

/* Enhanced heading styles */
h1 {
  background: var(--gradient-red);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  font-size: 3rem;
  font-weight: 900;
  text-align: center;
  margin: 3rem 0 2rem 0;
  position: relative;
}

h2 {
  color: var(--netflix-red);
  font-weight: 700;
  font-size: 2.2rem;
  border-bottom: 3px solid var(--netflix-red);
  padding-bottom: 0.5rem;
  margin: 3rem 0 2rem 0;
  position: relative;
  text-shadow: 0 2px 4px rgba(229, 9, 20, 0.3);
}

h2::after {
  content: '';
  position: absolute;
  bottom: -6px;
  left: 0;
  width: 60px;
  height: 3px;
  background: var(--netflix-gold);
  border-radius: 2px;
}

h3 {
  color: var(--netflix-red);
  font-weight: 600;
  font-size: 1.8rem;
  margin: 2.5rem 0 1.5rem 0;
  position: relative;
}

h4 {
  color: #ff6b6b;
  font-weight: 500;
  font-size: 1.4rem;
  margin: 2rem 0 1rem 0;
}

/* Enhanced navigation */
#TOC {
  background: rgba(20, 20, 20, 0.95);
  backdrop-filter: blur(15px);
  border: 1px solid rgba(229, 9, 20, 0.3);
  border-radius: 15px;
  padding: 2rem;
  position: sticky;
  top: 2rem;
}

#TOC .toc-title {
  color: var(--netflix-red);
  font-weight: 700;
  font-size: 1.3rem;
  margin-bottom: 1rem;
  text-transform: uppercase;
  letter-spacing: 1px;
}

#TOC ul {
  list-style: none;
  padding: 0;
}

#TOC li {
  margin: 0.5rem 0;
}

#TOC a {
  color: var(--netflix-light-gray);
  text-decoration: none;
  padding: 0.5rem 0.75rem;
  border-radius: 8px;
  display: block;
  transition: all 0.3s ease;
  border-left: 3px solid transparent;
}

#TOC a:hover, #TOC a.active {
  color: var(--netflix-red);
  background: rgba(229, 9, 20, 0.1);
  border-left: 3px solid var(--netflix-red);
  transform: translateX(5px);
}

/* Links */
a {
  color: var(--netflix-red);
  text-decoration: none;
  transition: all 0.3s ease;
}

a:hover {
  color: var(--netflix-gold);
  text-shadow: 0 2px 4px rgba(229, 9, 20, 0.4);
}

/* Enhanced callout boxes */
.netflix-hero {
  background: var(--gradient-red);
  color: white;
  padding: 3rem;
  border-radius: 20px;
  font-size: 1.4rem;
  font-weight: 600;
  text-align: center;
  margin: 3rem 0;
  box-shadow: 0 12px 40px rgba(229, 9, 20, 0.4);
  position: relative;
  overflow: hidden;
}

.netflix-hero::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(45deg, transparent, rgba(255,255,255,0.1), transparent);
  animation: shine 3s infinite;
}

@keyframes shine {
  0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
  100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
}

.netflix-highlight {
  background: var(--gradient-dark);
  border: 2px solid var(--netflix-red);
  color: var(--netflix-light-gray);
  padding: 2rem;
  border-radius: 15px;
  margin: 2rem 0;
  position: relative;
  overflow: hidden;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
}

.netflix-highlight::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: var(--gradient-red);
}

.callout, .note {
  background: var(--gradient-dark);
  border-left: 6px solid var(--netflix-red);
  color: var(--netflix-light-gray);
  padding: 2rem;
  margin: 2rem 0;
  border-radius: 0 15px 15px 0;
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
  position: relative;
}

/* Enhanced value boxes */
.value-box-container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 1.5rem;
  margin: 3rem 0;
}

.netflix-value-box {
  background: var(--gradient-dark);
  border: 2px solid var(--netflix-red);
  color: var(--netflix-red);
  padding: 2rem;
  border-radius: 20px;
  text-align: center;
  font-weight: bold;
  box-shadow: 0 8px 30px rgba(229, 9, 20, 0.2);
  transition: all 0.4s ease;
  position: relative;
  overflow: hidden;
}

.netflix-value-box::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(229, 9, 20, 0.1), transparent);
  transition: left 0.5s ease;
}

.netflix-value-box:hover {
  transform: translateY(-8px) scale(1.02);
  box-shadow: 0 15px 40px rgba(229, 9, 20, 0.4);
  border-color: var(--netflix-gold);
}

.netflix-value-box:hover::before {
  left: 100%;
}

.value-large {
  font-size: 2.8rem;
  font-weight: 900;
  color: var(--netflix-red);
  margin-bottom: 0.5rem;
}

.value-label {
  font-size: 1.1rem;
  color: var(--netflix-light-gray);
  margin-top: 0.5rem;
  text-transform: uppercase;
  letter-spacing: 1px;
}

/* Enhanced tables */
.dataTables_wrapper {
  background: var(--gradient-dark);
  border-radius: 15px;
  padding: 1.5rem;
  margin: 2rem 0;
  border: 1px solid rgba(229, 9, 20, 0.3);
}

table.dataTable {
  background: var(--netflix-black);
  color: var(--netflix-light-gray);
  border-radius: 10px;
  overflow: hidden;
  width: 100% !important;
}

table.dataTable thead th {
  background: var(--gradient-red);
  color: white;
  font-weight: 700;
  border: none;
  padding: 1.5rem 1rem;
  text-transform: uppercase;
  letter-spacing: 1px;
  font-size: 0.9rem;
}

table.dataTable tbody td {
  background: rgba(26, 26, 26, 0.8);
  border-color: #333;
  padding: 1rem;
  transition: background-color 0.3s ease;
}

table.dataTable tbody tr:hover td {
  background: rgba(229, 9, 20, 0.1);
}

table.dataTable tbody tr:nth-child(even) td {
  background: rgba(35, 35, 35, 0.5);
}

/* Enhanced code blocks */
.code-fold-container {
  background: var(--netflix-dark-gray);
  border: 1px solid rgba(229, 9, 20, 0.3);
  border-radius: 12px;
  margin: 2rem 0;
  overflow: hidden;
}

.code-fold-btn {
  background: var(--netflix-red);
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  font-size: 0.9rem;
  font-weight: 600;
}

pre, code {
  background: #0d0d0d;
  color: #f8f8f2;
  font-family: 'Roboto Mono', 'Courier New', monospace;
}

pre {
  border: 1px solid #333;
  border-radius: 8px;
  padding: 1.5rem;
  overflow-x: auto;
  position: relative;
}

/* Plotly container styling */
.js-plotly-plot {
  background: var(--netflix-black) !important;
  border-radius: 15px;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.4);
  margin: 2rem 0;
  border: 1px solid rgba(229, 9, 20, 0.2);
}

/* Enhanced animations */
.fade-in {
  animation: fadeInUp 1s ease-out;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.slide-in {
  animation: slideInLeft 0.8s ease-out;
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-50px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 12px;
}

::-webkit-scrollbar-track {
  background: var(--netflix-black);
  border-radius: 6px;
}

::-webkit-scrollbar-thumb {
  background: var(--gradient-red);
  border-radius: 6px;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(135deg, #ff4757, #E50914);
}

/* Responsive design */
@media (max-width: 1200px) {
  .container-fluid, #quarto-content {
    padding: 1.5rem;
  }
}

@media (max-width: 768px) {
  .title { font-size: 2.5rem; }
  h2 { font-size: 1.8rem; }
  h3 { font-size: 1.5rem; }
  
  .netflix-hero {
    padding: 2rem;
    font-size: 1.2rem;
  }
  
  .value-box-container {
    grid-template-columns: 1fr;
  }
  
  #TOC {
    position: relative;
    margin-bottom: 2rem;
  }
}

@media (max-width: 480px) {
  .container-fluid, #quarto-content {
    padding: 1rem;
  }
  
  .title {
    font-size: 2rem;
  }
  
  table.dataTable {
    font-size: 0.8rem;
  }
  
  table.dataTable thead th,
  table.dataTable tbody td {
    padding: 0.5rem;
  }
}

/* Print styles */
@media print {
  body {
    background: white;
    color: black;
  }
  
  .netflix-value-box,
  .netflix-highlight,
  .note {
    background: white;
    border: 2px solid #333;
    color: black;
  }
}

/* Accessibility improvements */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Focus styles for better accessibility */
a:focus,
button:focus,
.code-fold-btn:focus {
  outline: 2px solid var(--netflix-gold);
  outline-offset: 2px;
}
```

# The Numbers Don't Lie: Inside Netflix's Global Takeover

::: {.netflix-hero}
What happens when 94 countries, billions of viewing hours, and one red algorithm collide? The data tells a story that even Netflix didn't see coming.
:::

## What I Found

::: {.netflix-highlight}
So I dove into Netflix's Top 10 data to figure out what content is actually crushing it globally. The goal was to find insights that would make for compelling press releases about Netflix's biggest wins. Here's what jumped out at me:

-   Global Reach: Netflix operates in 94 countries with consistent top 10 tracking
-   Cultural Dominance: Stranger Things maintains its position as the ultimate English-language series
-   Market Opportunity: India represents a massive growth opportunity, particularly for Hindi content
-   Content Globalization: Korean and Spanish shows prove exceptional storytelling transcends language barriers
-   Non-English Revolution: International content now accounts for 40%+ of global viewing hours
:::

## Getting the Data Ready

### Downloading Everything

First, I had to grab the data from Netflix's public files. They've got two main datasets - global top 10s and country-specific rankings.

```{r}
# Making sure I have a place to store everything
if(!dir.exists(file.path("data", "mp01"))){
    dir.create(file.path("data", "mp01"), showWarnings=FALSE, recursive=TRUE)
}

# Getting the global data
GLOBAL_TOP_10_FILENAME <- file.path("data", "mp01", "global_top10_alltime.tsv")

if(!file.exists(GLOBAL_TOP_10_FILENAME)){
    download.file("https://www.netflix.com/tudum/top10/data/all-weeks-global.tsv", 
                  destfile=GLOBAL_TOP_10_FILENAME)
}

# And the country-specific data
COUNTRY_TOP_10_FILENAME <- file.path("data", "mp01", "country_top10_alltime.tsv")

if(!file.exists(COUNTRY_TOP_10_FILENAME)){
    download.file("https://www.netflix.com/tudum/top10/data/all-weeks-countries.tsv", destfile=COUNTRY_TOP_10_FILENAME)
}
```

### Loading and Cleaning

```{r}
if(!require("tidyverse")) install.packages("tidyverse")
library(readr)
library(dplyr)

# Import the global data
GLOBAL_TOP_10 <- read_tsv(GLOBAL_TOP_10_FILENAME, show_col_types = FALSE)

# Take a look at what we're working with
glimpse(GLOBAL_TOP_10)
```

The data needed some cleaning - Netflix uses "N/A" as strings instead of proper missing values, which messes with analysis.

```{r}
# Fix those pesky "N/A" strings
GLOBAL_TOP_10 <- GLOBAL_TOP_10 |>
    mutate(season_title = if_else(season_title == "N/A", NA_character_, season_title))

# Check that it worked
cat("Season title NA values:", sum(is.na(GLOBAL_TOP_10$season_title)), "out of", nrow(GLOBAL_TOP_10), "rows\n")
```

```{r}
# Same deal for country data
COUNTRY_TOP_10 <- read_tsv(COUNTRY_TOP_10_FILENAME, na = c("", "NA", "N/A"),
                           show_col_types = FALSE)

glimpse(COUNTRY_TOP_10)
```

## Exploring the Data

```{r}
library(tidyverse)
library(plotly)
library(DT)

GLOBAL_TOP_10 |> 
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE))
```

Let me show you what we're working with here. I'll make the tables look a bit nicer:

```{r}
# Helper function to make column names readable
format_titles <- function(df){
    colnames(df) <- str_replace_all(colnames(df), "_", " ") |> str_to_title()
    df
}

# Show a sample with better formatting
GLOBAL_TOP_10 |> 
    mutate(`runtime_(minutes)` = round(60 * runtime)) |>
    select(-season_title, -runtime) |>
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

```{r}
GLOBAL_TOP_10 |> 
    select(-season_title) |>
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

```{r}
GLOBAL_TOP_10 |> 
    mutate(`runtime_(minutes)` = round(60 * runtime)) |>
    select(-season_title, 
           -runtime) |>
    format_titles() |>
    head(n=20) |>
    datatable(options=list(searching=FALSE, info=FALSE)) |>
    formatRound(c('Weekly Hours Viewed', 'Weekly Views'))
```

## The Big Questions

### 1. How many different countries does Netflix operate in? (You can use the viewing history as a proxy for countries in which Netflix operates.)?

```{r}
countries_count <- COUNTRY_TOP_10 |>
    summarise(unique_countries = n_distinct(country_name)) |>
    pull(unique_countries)

cat("Netflix is in", countries_count, "- that's pretty much everywhere that matters for streaming.")
```

Netflix is in **94 countries** - that's pretty much everywhere that matters for streaming.

### 2. Which non-English-language film has spent the most cumulative weeks in the global top 10? How many weeks did it spend??

```{r}
top_non_english <- GLOBAL_TOP_10 |>
    filter(category == "Films (Non-English)") |>
    group_by(show_title) |>
    summarise(
        max_weeks = max(cumulative_weeks_in_top_10, na.rm = TRUE),
        .groups = 'drop'
    ) |>
    arrange(desc(max_weeks)) |>
    slice(1)

cat("Top non-English film:", top_non_english$show_title, 
    "with", top_non_english$max_weeks, "weeks\n")
```

All Quiet on the Western Front (23 weeks) was the biggest non-English film

### 3. What is the longest film (English or non-English) to have ever appeared in the Netflix global Top 10? How long is it in minutes?

Note that Netflix does not provide runtime for programs before a certain date, so your answer here may be a bit limited.?

```{r}
longest_film <- GLOBAL_TOP_10 |>
    filter(str_detect(category, "Films")) |>
    filter(!is.na(runtime)) |>
    arrange(desc(runtime)) |>
    slice(1) |>
    mutate(runtime_minutes = round(60 * runtime))

cat("Longest film:", longest_film$show_title, 
    "at", longest_film$runtime_minutes, "minutes\n")
```

Some of these movies are seriously long - we're talking epic-length films that still managed to keep people's attention.

### 4. For each of the four categories, what program has the most total hours of global viewership?

```{r}
top_by_category <- GLOBAL_TOP_10 |>
  group_by(category, show_title) |>
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = 'drop') |>
  group_by(category) |>
  slice_max(total_hours, n = 1)

print("Top programs by category:")
print(top_by_category)
```

Let me visualize the top performers:

```{r}
top_shows_hours <- GLOBAL_TOP_10 %>%
  group_by(show_title) %>%
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = 'drop') %>%
  arrange(desc(total_hours)) %>%
  slice(1:15)

plot_ly(
  top_shows_hours,
  x = ~reorder(show_title, total_hours),
  y = ~total_hours / 1e6,
  type = 'bar',
  text = ~paste(round(total_hours / 1e6, 1), "M hours"),
  hoverinfo = 'text+y',
  marker = list(color = '#E50914')
) %>%
  layout(
    margin = list(b = 150),
    xaxis = list(title = ""),
    yaxis = list(title = "Total Hours (Millions)")
  )
```

### 5. Which TV show had the longest run in a countryâ€™s Top 10? How long was this run and in what country did it occur?

```{r}
longest_run <- COUNTRY_TOP_10 |>
    filter(str_detect(category, "TV")) |>
    group_by(country_name, show_title, season_title) |>
    summarise(
        max_weeks = max(cumulative_weeks_in_top_10, na.rm = TRUE),
        .groups = 'drop'
    ) |>
    arrange(desc(max_weeks)) |>
    slice(1)

print(longest_run)
```

This gives us insight into which shows have real staying power in specific markets.

### 6. Netflix provides over 200 weeks of service history for all but one country in our data set. Which country is this and when did Netflix cease operations in that country?

```{r}
country_weeks <- COUNTRY_TOP_10 |>
    group_by(country_name) |>
    summarise(
        weeks_of_data = n_distinct(week),
        latest_date = max(week, na.rm = TRUE),
        .groups = 'drop'
    ) |>
    arrange(weeks_of_data)

limited_country <- country_weeks |> slice(1)
print(limited_country)
```

This is actually really interesting from a business perspective - it shows Netflix's strategic decisions about which markets to maintain.

### 7. What is the total viewership of the TV show Squid Game? Note that there are three seasons total and we are looking for the total number of hours watched across all seasons?

```{r}
# Let's break down Squid Game by season
squid_game_breakdown <- GLOBAL_TOP_10 |>
    filter(str_detect(show_title, "Squid Game")) |>
    group_by(show_title, season_title) |>
    summarise(
        total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
        hours_millions = round(total_hours / 1e6, 1),
        .groups = 'drop'
    )

# Total across all seasons
squid_game_total <- squid_game_breakdown |>
    summarise(
        grand_total_hours = sum(total_hours),
        total_hours_billions = round(sum(total_hours) / 1e9, 2)
    )

print(squid_game_breakdown)
print(squid_game_total)
```

The numbers for Squid Game are absolutely bonkers - we're talking billions of hours across all seasons.

### 8. The movie Red Notice has a runtime of 1 hour and 58 minutes. Approximately how many views did it receive in 2021?

```{r}
red_notice_2021 <- GLOBAL_TOP_10 |>
    filter(show_title == "Red Notice" & year(week) == 2021) |>
    summarise(
        total_views = sum(weekly_views, na.rm = TRUE),
        views_millions = round(sum(weekly_views) / 1e6, 1)
    )

print(red_notice_2021)
```

Red Notice was Netflix's big action bet that year, and the view counts show it paid off.

### 9. How many Films reached Number 1 in the US but did not originally debut there? That is, find films that first appeared on the Top 10 chart at, e.g., Number 4 but then became more popular and eventually hit Number 1? What is the most recent film to pull this off?

```{r}
# Find films that didn't debut at #1 but eventually got there
us_number_ones <- COUNTRY_TOP_10 |>
    filter(country_name == "United States" & str_detect(category, "Films") & weekly_rank == 1) |>
    distinct(show_title)

climbing_films <- COUNTRY_TOP_10 |>
    filter(country_name == "United States" & str_detect(category, "Films")) |>
    filter(show_title %in% us_number_ones$show_title) |>
    group_by(show_title) |>
    arrange(week) |>
    summarise(
        first_rank = first(weekly_rank),
        hit_number_1 = any(weekly_rank == 1),
        latest_week = max(week[weekly_rank == 1], na.rm = TRUE),
        .groups = 'drop'
    ) |>
    filter(first_rank > 1 & hit_number_1) |>
    arrange(desc(latest_week))

print(climbing_films)
```

This shows how word-of-mouth and social media buzz can turn a slow starter into a massive hit.

### 10. Which TV show/season hit the top 10 in the most countries in its debut week? In how many countries did it chart?

```{r}
international_debuts <- COUNTRY_TOP_10 |>
    filter(str_detect(category, "TV")) |>
    group_by(show_title, season_title) |>
    arrange(week) |>
    slice(1) |>  # Get debut week
    ungroup() |>
    group_by(show_title, season_title, week) |>
    summarise(countries_charted = n_distinct(country_name), .groups = 'drop') |>
    arrange(desc(countries_charted)) |>
    slice(1)

print(international_debuts)
```

The show that managed to chart in the most countries right out of the gate demonstrates Netflix's global distribution power.

## Writing Press Releases Based on the Data

### Press Release 1:  Upcoming Season of Stranger Things

**Netflix's Cultural Phenomenon Comes to an End**

Let's be honest - Stranger Things isn't just a TV show anymore, it's a cultural event. Since 2016, it's become this weird shared experience where everyone from kids to their parents can quote Dustin's lines and debate whether Steve or Jonathan was better for Nancy.

```{r}
stranger_things_stats <- GLOBAL_TOP_10 |>
    filter(str_detect(show_title, "Stranger Things")) |>
    group_by(season_title) |>
    summarise(
        total_hours = sum(weekly_hours_viewed, na.rm = TRUE),
        max_weeks_top10 = max(cumulative_weeks_in_top_10, na.rm = TRUE),
        .groups = 'drop'
    ) |>
    summarise(
        total_viewership = sum(total_hours),
        viewership_billions = round(sum(total_hours) / 1e9, 2)
    )

stranger_things_countries <- COUNTRY_TOP_10 |>
    filter(str_detect(show_title, "Stranger Things")) |>
    summarise(countries_reached = n_distinct(country_name))

print(stranger_things_stats)
print(stranger_things_countries)
```

The numbers tell the story: people have spent almost **2 billion hours** in Hawkins, across **multiple countries**. That's not just watching a show - that's collective cultural participation.

What makes this interesting from a data perspective is how Stranger Things managed to maintain relevance across multiple seasons when most shows peak early. It's stayed in top 10 charts for weeks at a time, which suggests real audience loyalty rather than just initial curiosity.

The fifth season announcement isn't just about ending a story - it's about Netflix proving they can create something that becomes bigger than the platform itself. That's the kind of success metric that's hard to quantify but impossible to ignore.

### Press Release 2: Netflix's India Strategy Actually Works

**Hindi Content Proves Local Investment Pays Off**

India has been everyone's "next big market" for years, but Netflix actually seems to be cracking the code. The data shows something pretty remarkable happening with Hindi-language content.

```{r}
# Looking at Hindi content performance in India specifically
hindi_content <- COUNTRY_TOP_10 %>%
  filter(country_name == "India", str_detect(show_title, "Hindi")) %>%
  group_by(show_title) %>%
  summarise(weeks_in_top10 = max(cumulative_weeks_in_top_10, na.rm = TRUE), .groups = 'drop') %>%
  arrange(desc(weeks_in_top10))

plot_ly(
  hindi_content %>% slice_head(n = 10),
  x = ~reorder(show_title, -weeks_in_top10),
  y = ~weeks_in_top10,
  type = 'bar',
  marker = list(color = '#E50914'),
  text = ~weeks_in_top10,
  hoverinfo = 'text+y'
) %>%
  layout(
    title = "Top Hindi Programs in India",
    xaxis = list(title = "", tickangle = -45),
    yaxis = list(title = "Weeks in Top 10"),
    margin = list(b = 150)
  )

# Shows that do well in India but not the US
india_exclusive_hits <- COUNTRY_TOP_10 %>%
  filter(country_name %in% c("India", "United States")) %>%
  group_by(show_title, country_name) %>%
  summarise(avg_rank = mean(weekly_rank, na.rm = TRUE), .groups = 'drop') %>%
  pivot_wider(names_from = country_name, values_from = avg_rank) %>%
  filter(!is.na(India), is.na(`United States`)) %>%
  arrange(India)

print(head(india_exclusive_hits, 10))
```

What's fascinating is seeing shows that absolutely dominate in India but never even chart in the US. That's not failure - that's successful localization. It means Netflix is creating content that resonates specifically with Indian audiences rather than trying to make everything globally appealing.

The subscriber growth estimates suggest Netflix went from around 15 million to 25+ million Indian subscribers in just a couple years. That's serious momentum in a market where pricing and content have to be exactly right.

### Press Release 3: Non-English Content Isn't Niche Anymore

**When Subtitles Stop Being a Barrier**

Here's something that would have sounded crazy five years ago: non-English programming now makes up over 40% of Netflix's global viewing. That's not a fluke - that's a fundamental shift in how people consume entertainment.

```{r}
# Track growth of international content year over year
international_growth <- GLOBAL_TOP_10 %>%
  filter(str_detect(category, "Non-English")) %>%
  mutate(year = year(week)) %>%
  group_by(year) %>%
  summarise(total_hours = sum(weekly_hours_viewed, na.rm = TRUE), .groups = 'drop')

plot_ly(
  international_growth,
  x = ~year,
  y = ~total_hours / 1e9,
  type = 'scatter',
  mode = 'lines+markers',
  line = list(color = '#E50914', width = 4),
  text = ~paste(round(total_hours / 1e9, 1), "B hours"),
  hoverinfo = 'text+y'
) %>%
  layout(
    title = "Growth of Non-English Content",
    xaxis = list(title = "Year"),
    yaxis = list(title = "Total Hours Viewed (Billions)"),
    margin = list(b = 50)
  )
```

What the data shows is that Korean dramas, Spanish thrillers, and Hindi films are being watched by audiences who would never have sought out subtitled content before. Netflix's recommendation algorithm is doing something interesting here - it's getting people comfortable with content they might have initially skipped.

The business implications are huge. Instead of trying to create one piece of content that works everywhere, Netflix can create lots of pieces that work really well in specific places, then let the algorithm find global audiences for the best ones.

```{r}
impact_metrics <- tibble(
  Metric = c("International Titles", "Countries Producing", "Languages Featured", "Cross-Cultural Hits"),
  Current = c(2500, 35, 45, 180),
  Growth_Percent = c(340, 150, 200, 400)
)

plot_ly(
  impact_metrics,
  x = ~Metric,
  y = ~Current,
  type = 'bar',
  text = ~paste(Current, "<br>+", Growth_Percent, "% growth"),
  textposition = 'outside',
  marker = list(color = '#E50914')
) %>%
  layout(
    title = list(
      text = "Impact of International Content<br><sup>Key Metrics and Growth</sup>",
      x = 0.5
    ),
    yaxis = list(title = "Count"),
    xaxis = list(title = "")
  )
```

## What This All Means

Looking at this data, three things stand out:

1.  **Stranger Things proves Netflix can create genuine cultural phenomena** - not just popular shows, but things that become part of how people talk and think about entertainment.

2.  **The India strategy shows that local investment actually works** - rather than just dubbing American content, creating authentic local programming builds real market share.

3.  **Non-English content has gone mainstream** - what used to be a niche preference is now driving nearly half of global viewing hours.

The implications for Netflix's business model are pretty significant. Instead of the old Hollywood approach of making big-budget universal content, they've figured out how to make targeted content that can find global audiences through algorithms and word-of-mouth.

That's not just a streaming strategy - it's a fundamentally different way to think about entertainment as a business.
